<h1>@Titulo</h1>


@if(tarefas == null)
{
    @*<p>Carregando...</p>*@

    <Alerta Mensagem="Carregando...">

        <Conteudo1>
            <img src="" />
            <h1>Aguarde...</h1>
        </Conteudo1>

        <Conteudo2>
            <h2>Carregando</h2>
        </Conteudo2>

        @*
    <span style="color:blue">Carregando tarefas...</span>
    *@
    </Alerta>

} else if(!tarefas.Any())
{
    @*<p>Ainda não existem tarefas...</p> *@

    <Alerta Mensagem="Ainda não existem tarefas...">
        <Conteudo1></Conteudo1>
        <Conteudo2></Conteudo2>
    </Alerta>
} else
{
    <table class="table">
        <thead>
            <tr>
                <th>Ação</th>
                <th>Data</th>
                <th>Descrição</th>
                <th>Concluída</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var item in tarefas)
            {
                <tr>
                    <TarefaIndividual item="@item" RemoverTarefa="RemoveTarefa" />
                </tr>
            }
        </tbody>
    </table>
}

@if(tarefas != null)
{
    <div class="form-group">
        <label>Tarefa</label>
        <input type="text" placeholder="Informe a tarefa" @bind="novaTarefa" />
        <button class="btn btn-primary" @onclick="AdicionarNovaTarefa">Registrar Tarefa</button>
    </div>
}

@code {
    [Parameter] public List<Tarefa> tarefas { get; set; }
    [Parameter] public string Titulo { get; set; }

    private string novaTarefa = "";

    void AdicionarNovaTarefa()
    {
        if(!string.IsNullOrWhiteSpace(novaTarefa))
        {
            tarefas.Add(new Tarefa
                {
                    DataCriacao = DateTime.Now,
                    Descricao = novaTarefa,
                    Id = Guid.NewGuid()
                });

            novaTarefa = "";
        }
    }

    private void RemoveTarefa(Tarefa tarefa)
    {
        tarefas.Remove(tarefas.First(x => x.Id == tarefa.Id));
    }
}