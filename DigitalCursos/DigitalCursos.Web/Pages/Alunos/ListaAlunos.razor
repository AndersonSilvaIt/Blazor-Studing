@page "/alunos"
@inject IAlunoService alunoService

<h3>Alunos</h3>

<div>
    <a href="aluno/create" class="btn btn-outline-secondary"> Criar Novo Aluno </a>
</div>

<br />

@if(Alunos == null)
{
    <img src="https://media.giphy.com/media/sSgvbe1m3n93G/giphy.gif" />
} else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Nome</th>
                <th>Email</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var aluno in Alunos)
            {
                <tr>
                    <td>@aluno.AlunoId</td>
                    <td>@aluno.Nome</td>
                    <td>@aluno.Email</td>
                    <td>
                        <a href="/aluno/edit/@aluno.AlunoId" class="btn btn-success">Edita</a>
                        <a href="/aluno/delete/@aluno.AlunoId" class="btn btn-danger">Deleta</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

}



@code {

    public IEnumerable<Aluno> Alunos { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await GetAlunos();
    }

    protected async Task GetAlunos()
    {
        //Alunos = await http.GetFromJsonAsync<IEnumerable<Aluno>>($"api/Alunos");
        Alunos = await alunoService.GetAlunos();
    }
}
